{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","dateTimerId","startDateTimer","window","setInterval","setState","this","prevProps","prevState","clockName","props","console","debug","info","getUtcDate","clearInterval","toUTCString","slice","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockTimerId","handleClick","handleContextMenu","event","preventDefault","startClockTimer","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAyB,CACvBC,YAAa,IAAIC,MAFrB,EAKEC,YAA6B,KAL/B,EAiCEC,eAAiB,kBACfC,OAAOC,aAAY,kBAAM,EAAKC,SAAS,CAAEN,YAAa,IAAIC,SAAW,MAlCzE,uDAOE,WACEM,KAAKL,YAAcK,KAAKJ,mBAR5B,gCAWE,SAAmBK,EAAkBC,GAC/BD,EAAUE,YAAcH,KAAKI,MAAMD,WAErCE,QAAQC,MAAR,uBAA8BL,EAAUE,UAAxC,eAAwDH,KAAKI,MAAMD,YAGjED,EAAUT,cAAgBO,KAAKR,MAAMC,aAEvCY,QAAQE,KAAKP,KAAKQ,gBAnBxB,kCAuBE,WACMR,KAAKL,aACPE,OAAOY,cAAcT,KAAKL,eAzBhC,wBA6BE,WACE,OAAOK,KAAKR,MAAMC,YAAYiB,cAAcC,OAAO,IAAK,KA9B5D,oBAqCE,WACE,IAAQR,EAAcH,KAAKI,MAAnBD,UAER,OACE,sBAAKS,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGT,IAGF,YAED,sBAAMS,UAAU,cAAhB,SACGZ,KAAKQ,sBAjDhB,GAA2BK,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWP,OAAO,GAE3C,MAAM,SAAN,OAAgBK,GAQX,IAAMG,EAAb,4MACE3B,MAAyB,CACvBW,UAAW,UACXiB,UAAU,GAHd,EAMEC,aAA8B,KANhC,EAqBEC,YAAc,WACZ,EAAKvB,SAAS,CAAEqB,UAAU,KAtB9B,EAyBEG,kBAAoB,SAACC,GACnBA,EAAMC,iBAEN,EAAK1B,SAAS,CAAEqB,UAAU,KA5B9B,EA+BEM,gBAAkB,WAChB,OAAQ7B,OAAOC,aAAY,WACzB,EAAKC,SAAS,CAAEI,UAAWY,QAC1B,OAlCP,uDAQE,WACEf,KAAKqB,aAAerB,KAAK0B,kBAEzBC,SAASC,iBAAiB,cAAe5B,KAAKuB,mBAC9CI,SAASC,iBAAiB,QAAS5B,KAAKsB,eAZ5C,kCAeE,WACMtB,KAAKqB,cACPxB,OAAOY,cAAcT,KAAKqB,gBAjBhC,oBAqCE,WACE,MAGIrB,KAAKR,MAFPW,EADF,EACEA,UACAiB,EAFF,EAEEA,SAGF,OACE,sBAAKR,UAAU,MAAf,UACE,6CAEEQ,GAAY,cAAC,EAAD,CAAOjB,UAAWA,WA/CxC,GAAyBU,IAAMC,WCZ/Be,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.9405b516.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  currentTime: Date;\n}\n\ninterface Props {\n  clockName: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    currentTime: new Date(),\n  };\n\n  dateTimerId: number | null = null;\n\n  componentDidMount(): void {\n    this.dateTimerId = this.startDateTimer();\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n\n    if (prevState.currentTime !== this.state.currentTime) {\n      // eslint-disable-next-line no-console\n      console.info(this.getUtcDate());\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.dateTimerId) {\n      window.clearInterval(this.dateTimerId);\n    }\n  }\n\n  getUtcDate() {\n    return this.state.currentTime.toUTCString().slice(-12, -4);\n  }\n\n  startDateTimer = () => (\n    window.setInterval(() => this.setState({ currentTime: new Date() }), 1000)\n  );\n\n  render() {\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.getUtcDate()}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  clockTimerId: number | null = null;\n\n  componentDidMount(): void {\n    this.clockTimerId = this.startClockTimer();\n\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount(): void {\n    if (this.clockTimerId) {\n      window.clearInterval(this.clockTimerId);\n    }\n  }\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  startClockTimer = () => {\n    return (window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300));\n  };\n\n  render() {\n    const {\n      clockName,\n      hasClock,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        { hasClock && <Clock clockName={clockName} /> }\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}